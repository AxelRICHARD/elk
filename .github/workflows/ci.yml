# To verify that the changes of a PR do not break the build and pass the tests. 
name: ELK CI

on:
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # We check LTS versions and the latest release
        # 8  - LTS - required by elkjs
        # 11 - LTS - unfortunately 9-11 fail due to some dependency issue(s) with the tests
        # 14 - latest
        java-version: [ 8, 11, 14 ]
  
    steps:
    # Checkout the reposity of both elk and elk-models (the latter is required for the tests)
    - uses: actions/checkout@v2
      with:
        path: elk
    - uses: actions/checkout@v2
      with:
        repository: eclipse/elk-models
        path: elk-models
    # Prepare and use a cache for maven
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up Java version ${{ matrix.java-version }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java-version }}
    - name: Build and verify with maven
      # Run mvn in the 'build' folder
      working-directory: /home/runner/work/elk/elk/elk/build/
      # As line breaks do not seem to be supported, env variables are used as workaround to make the mvn call readable
      run: mvn $opts $meta $doc $test $test_models clean verify
      env: 
        opts: --fail-at-end --no-transfer-progress
        meta: --define elkMeta.repositoryUrl=http://build.eclipse.org/modeling/elk/maven/meta/nightly
        doc: --define elk.metadata.documentation.outputPath=/home/runner/work/elk/elk/elk/docs
        test: --define tests.paths.elk-repo=/home/runner/work/elk/elk/elk
        test_models: --define tests.paths.models-repo=/home/runner/work/elk/elk/elk-models
